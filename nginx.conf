http {
    
    server {
        listen 80;
        listen [::]:80;

        server_name pgadmin-xyz.dropgala.com;

        # redirects http to https
        return 301 https://$host$request_uri;
    }

    server {
        listen 443 ssl http2;
        listen [::]:443 ssl http2;

        server_name pgadmin-xyz.dropgala.com;

        ssl_certificate  /etc/nginx/fullchain.pem;
        ssl_certificate_key /etc/nginx/privkey.pem;
        ssl_session_timeout 1d;

        # Anable TLS 1.3, TLS 1.2
        ssl_protocols TLSv1.2 TLSv1.3;
        ssl_ciphers ECDHE-ECDSA-AES128-GCM-SHA256:ECDHE-RSA-AES128-GCM-SHA256:ECDHE-ECDSA-AES256-GCM-SHA384:ECDHE-RSA-AES256-GCM-SHA384:ECDHE-ECDSA-CHACHA20-POLY1305:ECDHE-RSA-CHACHA20-POLY1305:DHE-RSA-AES128-GCM-SHA256:DHE-RSA-AES256-GCM-SHA384;
        ssl_prefer_server_ciphers off; 

        # HSTS (ngx_http_headers_module is required) (63072000 seconds)
        add_header Strict-Transport-Security "max-age=63072000" always;

        # OCSP stapling
        ssl_stapling on;
        ssl_stapling_verify on;

        # verify chain of trust of OCSP response using Root CA and Intermediate certs
        ssl_trusted_certificate /etc/nginx/chain.pem;

        location / {
            proxy_set_header X-Script-Name /;
            proxy_set_header X-Scheme $scheme;    
            proxy_set_header Host $host;
            proxy_pass http://pgadmin;
            proxy_redirect off;
        }
    }
} 

stream {
    upstream postgres {
        server postgres:5432;
    }

    server {
        listen 5422 so_keepalive=on;
        proxy_pass postgres;
    }
}

events {
    worker_connections 1024;
}